# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

conda-cpp-deps:
    ARG arch=amd64
    FROM ${arch}/ubuntu:18.04

    ARG prefix=/opt/conda

    # install build essentials
    RUN export DEBIAN_FRONTEND=noninteractive && \
        apt-get update -y -q && \
        apt-get install -y -q wget tzdata libc6-dbg \
        && apt-get clean \
        && rm -rf /var/lib/apt/lists/*

    ENV PATH=${prefix}/bin:$PATH
    # install conda and minio
    COPY ./scripts/install_conda.sh \
        ./scripts/install_minio.sh \
        /arrow/ci/scripts/
    RUN /arrow/ci/scripts/install_conda.sh ${arch} linux latest ${prefix}
    RUN /arrow/ci/scripts/install_minio.sh ${arch} linux latest ${prefix}

    # install the required conda packages into the test environment
    COPY ./conda_env_cpp.yml \
        ./conda_env_gandiva.yml \
        ./conda_env_unix.yml \
        /arrow/ci/
    RUN conda create -n arrow -q -y \
            --file arrow/ci/conda_env_unix.yml \
            --file arrow/ci/conda_env_cpp.yml \
            --file arrow/ci/conda_env_gandiva.yml \
            compilers \
            doxygen \
            gdb \
            git \
            valgrind && \
        conda clean --all

    # activate the created environment by default
    RUN echo "conda activate arrow" >> ~/.profile
    ENV CONDA_PREFIX=${prefix}/envs/arrow

    # use login shell to activate arrow environment un the RUN commands
    # TODO: Earthly does not support SHELL yet.
    #SHELL [ "/bin/bash", "-c", "-l" ]

    # use login shell when running the container
    ENTRYPOINT [ "/bin/bash", "-c", "-l" ]

    ENV ARROW_BUILD_TESTS=ON
    ENV ARROW_DATASET=ON
    ENV ARROW_DEPENDENCY_SOURCE=CONDA
    ENV ARROW_FLIGHT=ON
    ENV ARROW_GANDIVA=ON
    ENV ARROW_HOME=$CONDA_PREFIX
    ENV ARROW_ORC=ON
    ENV ARROW_PARQUET=ON
    ENV ARROW_PLASMA=ON
    ENV ARROW_S3=ON
    ENV ARROW_USE_CCACHE=ON
    ENV ARROW_WITH_BROTLI=ON
    ENV ARROW_WITH_BZ2=ON
    ENV ARROW_WITH_LZ4=ON
    ENV ARROW_WITH_SNAPPY=ON
    ENV ARROW_WITH_ZLIB=ON
    ENV ARROW_WITH_ZSTD=ON
    ENV PARQUET_BUILD_EXAMPLES=ON
    ENV PARQUET_BUILD_EXECUTABLES=ON
    ENV PARQUET_HOME=$CONDA_PREFIX

conda-python-deps:
    FROM +conda-cpp-deps

    # install python specific packages
    ARG python=3.6
    COPY ./conda_env_python.yml /arrow/ci/
    RUN conda install -q -y \
            --file arrow/ci/conda_env_python.yml \
            $([ "$python" = "3.6" -o "$python" = "3.7" ] && echo "pickle5") \
            python=${python} \
            nomkl && \
        conda clean --all

    ENV ARROW_PYTHON=ON
    ENV ARROW_BUILD_STATIC=OFF
    ENV ARROW_BUILD_TESTS=OFF
    ENV ARROW_BUILD_UTILITIES=OFF
    ENV ARROW_TENSORFLOW=ON
    ENV ARROW_USE_GLOG=OFF
